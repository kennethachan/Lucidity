{"ast":null,"code":"var _jsxFileName = \"/Users/kennethchan/Desktop/GA/unit2/Lucidity/frontend/src/components/Note.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport NoteText from \"./NoteText\";\nimport add from \"../buttons/add.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst URL = \"http://localhost:3001\";\n\nfunction Note(props) {\n  _s();\n\n  const [text, setText] = useState(\"\");\n  const [note, setNote] = useState([]);\n  const [update, setUpdate] = useState(\"\");\n  useEffect(() => {\n    getNotes();\n  }, []); //Notes are mapped onload using useEffect.  Function is used inside all other functions below to remap after any update is made.\n\n  const getNotes = async () => {\n    const res = await axios.get(`${URL}/get-note`);\n    setNote(res.data.notes);\n  }; //A note is selected by Id and deleted, page is updated using getNotes\n\n\n  const deleteText = async _id => {\n    const res = await axios.delete(`${URL}/delete-note/${_id}`).then(_res => getNotes()).catch(error => console.log(error));\n  }; //A note is selected by Id and updated, page is updated using getNotes\n\n\n  const updateText = async (_id, text) => {\n    const res = await axios.put(`${URL}/update-note/${_id}`, {\n      text\n    }).then(_res => getNotes()).catch(error => console.log(error));\n  };\n\n  const addText = async () => {\n    if (update === \"\") {\n      const res = await axios.post(`${URL}/add-note/`, {\n        text\n      }).then(res => {\n        console.log(res.data);\n        setText(\"\");\n        getNotes();\n      }).catch(error => console.log(error));\n    } else {\n      const res = await axios.post(`${URL}/add-note/`, {\n        _id: update,\n        text\n      }).then(res => {\n        console.log(res.data);\n        setText(\"\");\n        setUpdate(\"\");\n        getNotes();\n      }).catch(error => console.log(error));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"note-wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"write\",\n      children: \"write it down\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      onClick: addText,\n      className: \"add\",\n      src: add\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"input-text\",\n      placeholder: \"w r i t e  h e r e\",\n      value: text,\n      onChange: e => setText(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"note-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"notes\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"note-text\",\n          children: note.map(text => /*#__PURE__*/_jsxDEV(NoteText, {\n            text: text.text,\n            remove: () => deleteText(text._id),\n            update: updatedText => updateText(text._id, updatedText)\n          }, text._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Note, \"ZgkFzNchHjJ0Da0Td5GobtX+woI=\");\n\n_c = Note;\nexport default Note;\n\nvar _c;\n\n$RefreshReg$(_c, \"Note\");","map":{"version":3,"names":["React","useState","useEffect","axios","NoteText","add","URL","Note","props","text","setText","note","setNote","update","setUpdate","getNotes","res","get","data","notes","deleteText","_id","delete","then","_res","catch","error","console","log","updateText","put","addText","post","e","target","value","map","updatedText"],"sources":["/Users/kennethchan/Desktop/GA/unit2/Lucidity/frontend/src/components/Note.js"],"sourcesContent":["import React from \"react\"\nimport { useState, useEffect } from \"react\"\nimport axios from \"axios\"\nimport NoteText from \"./NoteText\"\nimport add from \"../buttons/add.png\"\n\nconst URL = \"http://localhost:3001\"\n\nfunction Note(props) {\n  const [text, setText] = useState(\"\")\n  const [note, setNote] = useState([])\n  const [update, setUpdate] = useState(\"\")\n\n  useEffect(() => {\n    getNotes()\n  }, [])\n\n  //Notes are mapped onload using useEffect.  Function is used inside all other functions below to remap after any update is made.\n  const getNotes = async () => {\n    const res = await axios.get(`${URL}/get-note`)\n    setNote(res.data.notes)\n  }\n  //A note is selected by Id and deleted, page is updated using getNotes\n  const deleteText = async (_id) => {\n    const res = await axios\n      .delete(`${URL}/delete-note/${_id}`)\n      .then((_res) => getNotes())\n      .catch((error) => console.log(error))\n  }\n\n  //A note is selected by Id and updated, page is updated using getNotes\n  const updateText = async (_id, text) => {\n    const res = await axios\n      .put(`${URL}/update-note/${_id}`, { text })\n      .then((_res) => getNotes())\n      .catch((error) => console.log(error))\n  }\n\n  const addText = async () => {\n    if (update === \"\") {\n      const res = await axios\n        .post(`${URL}/add-note/`, { text })\n        .then((res) => {\n          console.log(res.data)\n          setText(\"\")\n          getNotes()\n        })\n        .catch((error) => console.log(error))\n    } else {\n      const res = await axios\n        .post(`${URL}/add-note/`, { _id: update, text })\n        .then((res) => {\n          console.log(res.data)\n          setText(\"\")\n          setUpdate(\"\")\n          getNotes()\n        })\n        .catch((error) => console.log(error))\n    }\n  }\n\n  return (\n    <div className=\"note-wrapper\">\n      <h3 className=\"write\">write it down</h3>\n      <img onClick={addText} className=\"add\" src={add}></img>\n      <input\n        className=\"input-text\"\n        placeholder={\"w r i t e  h e r e\"}\n        value={text}\n        onChange={(e) => setText(e.target.value)}\n      ></input>\n      <div className=\"note-container\">\n        <div className=\"notes\">\n          <div className=\"note-text\">\n            {note.map((text) => (\n              <NoteText\n                key={text._id}\n                text={text.text}\n                remove={() => deleteText(text._id)}\n                update={(updatedText) => updateText(text._id, updatedText)}\n              />\n            ))}\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Note\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}