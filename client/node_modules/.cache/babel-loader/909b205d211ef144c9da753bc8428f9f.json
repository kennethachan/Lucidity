{"ast":null,"code":"var _jsxFileName = \"/Users/kennethchan/Desktop/GA/unit2/Lucidity/client/src/components/NoteText.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useState, createRef } from \"react\";\nimport editButton from \"../buttons/edit.png\";\nimport deleteButton from \"../buttons/delete.png\";\nimport saveButton from \"../buttons/save.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function NoteText(_ref) {\n  _s();\n\n  let {\n    text,\n    remove,\n    update\n  } = _ref;\n  const [edit, setEdit] = useState(false); //This will be toggled to swtich between update and save interface\n\n  const input = /*#__PURE__*/createRef();\n\n  const saveText = () => {\n    update(input.current.value);\n    setEdit(false);\n  }; //*A friend introduced me to the use of fragments*\n  //If edit is true user can change default input value.  Ref will grab the value of the input.Button will trigger save function that will update to current input value and set edit back to false\n  //If edit is false user can click a button that will trigger edit back to true\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"item\",\n    children: [edit ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        defaultValue: text,\n        className: \"edit-text\",\n        ref: input\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"icons\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: saveButton,\n          className: \"save\",\n          onClick: saveText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text\",\n        children: text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"icons\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: editButton,\n          className: \"edit\",\n          onClick: () => setEdit(true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: deleteButton,\n      className: \"delete\",\n      onClick: remove\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n}\n\n_s(NoteText, \"XWuH1s0cPjelCjvJiiBBkLvdpaI=\");\n\n_c = NoteText;\n\nvar _c;\n\n$RefreshReg$(_c, \"NoteText\");","map":{"version":3,"names":["React","useState","createRef","editButton","deleteButton","saveButton","NoteText","text","remove","update","edit","setEdit","input","saveText","current","value"],"sources":["/Users/kennethchan/Desktop/GA/unit2/Lucidity/client/src/components/NoteText.js"],"sourcesContent":["import React from \"react\"\nimport { useState, createRef } from \"react\"\nimport editButton from \"../buttons/edit.png\"\nimport deleteButton from \"../buttons/delete.png\"\nimport saveButton from \"../buttons/save.png\"\n\nexport default function NoteText({ text, remove, update }) {\n  const [edit, setEdit] = useState(false) //This will be toggled to swtich between update and save interface\n  const input = createRef()\n  const saveText = () => {\n    update(input.current.value)\n    setEdit(false)\n  }\n\n  //*A friend introduced me to the use of fragments*\n  //If edit is true user can change default input value.  Ref will grab the value of the input.Button will trigger save function that will update to current input value and set edit back to false\n  //If edit is false user can click a button that will trigger edit back to true\n  return (\n    <div className=\"item\">\n      {edit ? (\n        <>\n          <input defaultValue={text} className=\"edit-text\" ref={input} />\n          <div className=\"icons\">\n            <img src={saveButton} className=\"save\" onClick={saveText}></img>\n          </div>\n        </>\n      ) : (\n        <>\n          <div className=\"text\">{text}</div>\n          <div className=\"icons\">\n            <img\n              src={editButton}\n              className=\"edit\"\n              onClick={() => setEdit(true)}\n            ></img>\n          </div>\n        </>\n      )}\n\n      <img src={deleteButton} className=\"delete\" onClick={remove}></img>\n    </div>\n  )\n}\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,UAAP,MAAuB,qBAAvB;AACA,OAAOC,YAAP,MAAyB,uBAAzB;AACA,OAAOC,UAAP,MAAuB,qBAAvB;;;AAEA,eAAe,SAASC,QAAT,OAA4C;EAAA;;EAAA,IAA1B;IAAEC,IAAF;IAAQC,MAAR;IAAgBC;EAAhB,CAA0B;EACzD,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC,KAAD,CAAhC,CADyD,CACjB;;EACxC,MAAMW,KAAK,gBAAGV,SAAS,EAAvB;;EACA,MAAMW,QAAQ,GAAG,MAAM;IACrBJ,MAAM,CAACG,KAAK,CAACE,OAAN,CAAcC,KAAf,CAAN;IACAJ,OAAO,CAAC,KAAD,CAAP;EACD,CAHD,CAHyD,CAQzD;EACA;EACA;;;EACA,oBACE;IAAK,SAAS,EAAC,MAAf;IAAA,WACGD,IAAI,gBACH;MAAA,wBACE;QAAO,YAAY,EAAEH,IAArB;QAA2B,SAAS,EAAC,WAArC;QAAiD,GAAG,EAAEK;MAAtD;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QAAK,SAAS,EAAC,OAAf;QAAA,uBACE;UAAK,GAAG,EAAEP,UAAV;UAAsB,SAAS,EAAC,MAAhC;UAAuC,OAAO,EAAEQ;QAAhD;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA,QAFF;IAAA,gBADG,gBAQH;MAAA,wBACE;QAAK,SAAS,EAAC,MAAf;QAAA,UAAuBN;MAAvB;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QAAK,SAAS,EAAC,OAAf;QAAA,uBACE;UACE,GAAG,EAAEJ,UADP;UAEE,SAAS,EAAC,MAFZ;UAGE,OAAO,EAAE,MAAMQ,OAAO,CAAC,IAAD;QAHxB;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA,QAFF;IAAA,gBATJ,eAqBE;MAAK,GAAG,EAAEP,YAAV;MAAwB,SAAS,EAAC,QAAlC;MAA2C,OAAO,EAAEI;IAApD;MAAA;MAAA;MAAA;IAAA,QArBF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAyBD;;GApCuBF,Q;;KAAAA,Q"},"metadata":{},"sourceType":"module"}