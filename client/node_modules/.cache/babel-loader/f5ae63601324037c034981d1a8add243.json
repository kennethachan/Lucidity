{"ast":null,"code":"import _slicedToArray from\"/Users/kennethchan/Desktop/GA/unit2/Lucidity/client/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React from\"react\";import{useState,createRef}from\"react\";import editButton from\"../buttons/edit.png\";import deleteButton from\"../buttons/delete.png\";import saveButton from\"../buttons/save.png\";import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function NoteText(_ref){var text=_ref.text,remove=_ref.remove,update=_ref.update;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),edit=_useState2[0],setEdit=_useState2[1];//This will be toggled to swtich between update and save interface\nvar input=/*#__PURE__*/createRef();var saveText=function saveText(){update(input.current.value);setEdit(false);};//*A friend introduced me to the use of fragments*\n//If edit is true user can change default input value.  Ref will grab the value of the input.Button will trigger save function that will update to current input value and set edit back to false\n//If edit is false user can click a button that will trigger edit back to true\nreturn/*#__PURE__*/_jsxs(\"div\",{className:\"item\",children:[edit?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"input\",{defaultValue:text,className:\"edit-text\",ref:input}),/*#__PURE__*/_jsx(\"div\",{className:\"icons\",children:/*#__PURE__*/_jsx(\"img\",{src:saveButton,className:\"save\",onClick:saveText})})]}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"div\",{className:\"text\",children:text}),/*#__PURE__*/_jsx(\"div\",{className:\"icons\",children:/*#__PURE__*/_jsx(\"img\",{src:editButton,className:\"edit\",onClick:function onClick(){return setEdit(true);}})})]}),/*#__PURE__*/_jsx(\"img\",{src:deleteButton,className:\"delete\",onClick:remove})]});}","map":{"version":3,"names":["React","useState","createRef","editButton","deleteButton","saveButton","NoteText","text","remove","update","edit","setEdit","input","saveText","current","value"],"sources":["/Users/kennethchan/Desktop/GA/unit2/Lucidity/client/src/components/NoteText.js"],"sourcesContent":["import React from \"react\"\nimport { useState, createRef } from \"react\"\nimport editButton from \"../buttons/edit.png\"\nimport deleteButton from \"../buttons/delete.png\"\nimport saveButton from \"../buttons/save.png\"\n\nexport default function NoteText({ text, remove, update }) {\n  const [edit, setEdit] = useState(false) //This will be toggled to swtich between update and save interface\n  const input = createRef()\n  const saveText = () => {\n    update(input.current.value)\n    setEdit(false)\n  }\n\n  //*A friend introduced me to the use of fragments*\n  //If edit is true user can change default input value.  Ref will grab the value of the input.Button will trigger save function that will update to current input value and set edit back to false\n  //If edit is false user can click a button that will trigger edit back to true\n  return (\n    <div className=\"item\">\n      {edit ? (\n        <>\n          <input defaultValue={text} className=\"edit-text\" ref={input} />\n          <div className=\"icons\">\n            <img src={saveButton} className=\"save\" onClick={saveText}></img>\n          </div>\n        </>\n      ) : (\n        <>\n          <div className=\"text\">{text}</div>\n          <div className=\"icons\">\n            <img\n              src={editButton}\n              className=\"edit\"\n              onClick={() => setEdit(true)}\n            ></img>\n          </div>\n        </>\n      )}\n\n      <img src={deleteButton} className=\"delete\" onClick={remove}></img>\n    </div>\n  )\n}\n"],"mappings":"yIAAA,MAAOA,MAAP,KAAkB,OAAlB,CACA,OAASC,QAAT,CAAmBC,SAAnB,KAAoC,OAApC,CACA,MAAOC,WAAP,KAAuB,qBAAvB,CACA,MAAOC,aAAP,KAAyB,uBAAzB,CACA,MAAOC,WAAP,KAAuB,qBAAvB,C,6IAEA,cAAe,SAASC,SAAT,MAA4C,IAAxBC,KAAwB,MAAxBA,IAAwB,CAAlBC,MAAkB,MAAlBA,MAAkB,CAAVC,MAAU,MAAVA,MAAU,CACzD,cAAwBR,QAAQ,CAAC,KAAD,CAAhC,wCAAOS,IAAP,eAAaC,OAAb,eAAwC;AACxC,GAAMC,MAAK,cAAGV,SAAS,EAAvB,CACA,GAAMW,SAAQ,CAAG,QAAXA,SAAW,EAAM,CACrBJ,MAAM,CAACG,KAAK,CAACE,OAAN,CAAcC,KAAf,CAAN,CACAJ,OAAO,CAAC,KAAD,CAAP,CACD,CAHD,CAKA;AACA;AACA;AACA,mBACE,aAAK,SAAS,CAAC,MAAf,WACGD,IAAI,cACH,wCACE,cAAO,YAAY,CAAEH,IAArB,CAA2B,SAAS,CAAC,WAArC,CAAiD,GAAG,CAAEK,KAAtD,EADF,cAEE,YAAK,SAAS,CAAC,OAAf,uBACE,YAAK,GAAG,CAAEP,UAAV,CAAsB,SAAS,CAAC,MAAhC,CAAuC,OAAO,CAAEQ,QAAhD,EADF,EAFF,GADG,cAQH,wCACE,YAAK,SAAS,CAAC,MAAf,UAAuBN,IAAvB,EADF,cAEE,YAAK,SAAS,CAAC,OAAf,uBACE,YACE,GAAG,CAAEJ,UADP,CAEE,SAAS,CAAC,MAFZ,CAGE,OAAO,CAAE,yBAAMQ,QAAO,CAAC,IAAD,CAAb,EAHX,EADF,EAFF,GATJ,cAqBE,YAAK,GAAG,CAAEP,YAAV,CAAwB,SAAS,CAAC,QAAlC,CAA2C,OAAO,CAAEI,MAApD,EArBF,GADF,CAyBD"},"metadata":{},"sourceType":"module"}