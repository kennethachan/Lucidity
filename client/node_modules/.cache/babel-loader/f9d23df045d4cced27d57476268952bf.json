{"ast":null,"code":"import _regeneratorRuntime from\"/Users/kennethchan/Desktop/GA/unit2/Lucidity/client/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/Users/kennethchan/Desktop/GA/unit2/Lucidity/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/Users/kennethchan/Desktop/GA/unit2/Lucidity/client/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React from\"react\";import{useState,useEffect}from\"react\";import axios from\"axios\";import NoteText from\"./NoteText\";import add from\"../buttons/add.png\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var URL=\"http://localhost:3001\";function Note(props){var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),text=_useState2[0],setText=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),note=_useState4[0],setNote=_useState4[1];var _useState5=useState(\"\"),_useState6=_slicedToArray(_useState5,2),update=_useState6[0],setUpdate=_useState6[1];useEffect(function(){getNotes();},[]);//Notes are mapped onload using useEffect.  Function is used inside all other functions below to remap after any update is made.\nvar getNotes=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){var res;return _regeneratorRuntime().wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return axios.get(\"\".concat(URL,\"/get-note\"));case 2:res=_context.sent;setNote(res.data.notes);case 4:case\"end\":return _context.stop();}}},_callee);}));return function getNotes(){return _ref.apply(this,arguments);};}();//A note is selected by Id and deleted, page is updated using getNotes\nvar deleteText=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(_id){var res;return _regeneratorRuntime().wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return axios.delete(\"\".concat(URL,\"/delete-note/\").concat(_id)).then(function(_res){return getNotes();}).catch(function(error){return console.log(error);});case 2:res=_context2.sent;case 3:case\"end\":return _context2.stop();}}},_callee2);}));return function deleteText(_x){return _ref2.apply(this,arguments);};}();//A note is selected by Id and updated, page is updated using getNotes.  See NoteText component\nvar updateText=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3(_id,text){var res;return _regeneratorRuntime().wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.next=2;return axios.put(\"\".concat(URL,\"/update-note/\").concat(_id),{text:text}).then(function(_res){return getNotes();}).catch(function(error){return console.log(error);});case 2:res=_context3.sent;case 3:case\"end\":return _context3.stop();}}},_callee3);}));return function updateText(_x2,_x3){return _ref3.apply(this,arguments);};}();//A note is added by grabbing the input value and setting it, text ecapsulate the request body that we are parsing\n//Text state is reset and page is updated by call getNotes\nvar addText=/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee4(){var res;return _regeneratorRuntime().wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:_context4.next=2;return axios.post(\"\".concat(URL,\"/add-note/\"),{text:text}).then(function(res){console.log(res.data);setText(\"\");getNotes();}).catch(function(error){return console.log(error);});case 2:res=_context4.sent;case 3:case\"end\":return _context4.stop();}}},_callee4);}));return function addText(){return _ref4.apply(this,arguments);};}();return/*#__PURE__*/_jsxs(\"div\",{className:\"note-wrapper\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"write\",children:\"write it down\"}),/*#__PURE__*/_jsx(\"img\",{onClick:addText,className:\"add\",src:add}),/*#__PURE__*/_jsx(\"input\",{className:\"input-text\",placeholder:\"w r i t e  h e r e\",value:text,onChange:function onChange(e){return setText(e.target.value);}}),/*#__PURE__*/_jsx(\"div\",{className:\"note-container\",children:/*#__PURE__*/_jsx(\"div\",{className:\"notes\",children:/*#__PURE__*/_jsx(\"div\",{className:\"note-text\",children:note.map(function(text){return/*#__PURE__*/_jsx(NoteText,{text:text.text,remove:function remove(){return deleteText(text._id);}//remove will trigger delete function with text's state id as the parameter.  see NoteText\n,update:function update(updatedText){return updateText(text._id,updatedText);}//update will trigger the update function with text's state id and input value. See NoteText\n},text._id);})})})})]});}export default Note;","map":{"version":3,"names":["React","useState","useEffect","axios","NoteText","add","URL","Note","props","text","setText","note","setNote","update","setUpdate","getNotes","get","res","data","notes","deleteText","_id","delete","then","_res","catch","error","console","log","updateText","put","addText","post","e","target","value","map","updatedText"],"sources":["/Users/kennethchan/Desktop/GA/unit2/Lucidity/client/src/components/Note.js"],"sourcesContent":["import React from \"react\"\nimport { useState, useEffect } from \"react\"\nimport axios from \"axios\"\nimport NoteText from \"./NoteText\"\nimport add from \"../buttons/add.png\"\n\nconst URL = \"http://localhost:3001\"\n\nfunction Note(props) {\n  const [text, setText] = useState(\"\")\n  const [note, setNote] = useState([])\n  const [update, setUpdate] = useState(\"\")\n\n  useEffect(() => {\n    getNotes()\n  }, [])\n\n  //Notes are mapped onload using useEffect.  Function is used inside all other functions below to remap after any update is made.\n  const getNotes = async () => {\n    const res = await axios.get(`${URL}/get-note`)\n    setNote(res.data.notes)\n  }\n  //A note is selected by Id and deleted, page is updated using getNotes\n  const deleteText = async (_id) => {\n    const res = await axios\n      .delete(`${URL}/delete-note/${_id}`)\n      .then((_res) => getNotes())\n      .catch((error) => console.log(error))\n  }\n\n  //A note is selected by Id and updated, page is updated using getNotes.  See NoteText component\n  const updateText = async (_id, text) => {\n    const res = await axios\n      .put(`${URL}/update-note/${_id}`, { text })\n      .then((_res) => getNotes())\n      .catch((error) => console.log(error))\n  }\n\n  //A note is added by grabbing the input value and setting it, text ecapsulate the request body that we are parsing\n  //Text state is reset and page is updated by call getNotes\n  const addText = async () => {\n    const res = await axios\n      .post(`${URL}/add-note/`, { text })\n      .then((res) => {\n        console.log(res.data)\n        setText(\"\")\n        getNotes()\n      })\n      .catch((error) => console.log(error))\n  }\n\n  return (\n    <div className=\"note-wrapper\">\n      <h3 className=\"write\">write it down</h3>\n      <img onClick={addText} className=\"add\" src={add}></img>\n      <input\n        className=\"input-text\"\n        placeholder={\"w r i t e  h e r e\"}\n        value={text}\n        onChange={(e) => setText(e.target.value)}\n      ></input>\n      <div className=\"note-container\">\n        <div className=\"notes\">\n          <div className=\"note-text\">\n            {note.map((text) => (\n              <NoteText\n                key={text._id}\n                text={text.text}\n                remove={() => deleteText(text._id)} //remove will trigger delete function with text's state id as the parameter.  see NoteText\n                update={(updatedText) => updateText(text._id, updatedText)} //update will trigger the update function with text's state id and input value. See NoteText\n              />\n            ))}\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Note\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}